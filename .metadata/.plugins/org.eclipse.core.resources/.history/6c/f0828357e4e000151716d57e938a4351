class Pramp {
   public static void main(String[] args) {
      dur = 100;
      // 1000 1200 = 200
      // 1100 1300 = 200
      
     // 1100   1200 
         
      int timesA[][] = new int[3][2]  {
         [1000, 1200]
         [1500, 1700]
         [1700, 1950]
      };
      int timesB[][] = new int[3][2]  {
         [1100, 1300]
         [1400, 1500]
         [1900, 2000]
      };
      
      meetingPlanner(dur, timesA, timesB);
      
   }   
   
   //The complexity will be too high for. O(mn) . O(m-n)
   //Just write the pseudo code
   public static int[] meetingPlanner(int dur, int timesA[], int timesB[]){
      for(int i=0; i<timesB[0].length;i++){
         start = Math.max(timesA[0][0], timesB[i][0]);
         end = Math.min(timesA[0][1], timesB[i][1]);
         if(end - start >= dur)
         {
                return new int[]{start, end};              
         }
      }
      return int[];          //check every possible pair of availability time spans for a minimal overlap of dur seconds.
      
      //Iterate through both the arrays. While iterating through 1, find the diff > dur, then search if the other person is available during that time.
      //Yes you got that right. 
   }
}

First check if the duration is > dur. 
